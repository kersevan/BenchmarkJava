{
 "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
 "version": "2.1.0",
 "runs": [
  {
   "tool": {
    "driver": {
     "name": "SemgrepCodeQLMerged.sarif",
     "semanticVersion": "SemgrepCodeQLMerged.sarif",
     "rules": [
      {
       "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
       "name": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
       "properties": {
        "tags": [
         "external/cwe/cwe-614"
        ],
        "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
       }
      },
      {
       "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
       "name": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
       "properties": {
        "tags": [
         "external/cwe/cwe-352"
        ],
        "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
       }
      },
      {
       "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
       "name": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
       "properties": {
        "tags": [
         "external/cwe/cwe-614"
        ],
        "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
       }
      },
      {
       "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
       "name": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
       "properties": {
        "tags": [
         "external/cwe/cwe-327"
        ],
        "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
       }
      },
      {
       "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
       "name": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
       "properties": {
        "tags": [
         "external/cwe/cwe-327"
        ],
        "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
       }
      },
      {
       "id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
       "name": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
       "properties": {
        "tags": [
         "external/cwe/cwe-89"
        ],
        "id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string"
       }
      },
      {
       "id": "java.lang.security.audit.ldap-injection.ldap-injection",
       "name": "java.lang.security.audit.ldap-injection.ldap-injection",
       "properties": {
        "tags": [
         "external/cwe/cwe-90"
        ],
        "id": "java.lang.security.audit.ldap-injection.ldap-injection"
       }
      },
      {
       "id": "java.lang.security.audit.overly-permissive-file-permission.overly-permissive-file-permission",
       "name": "java.lang.security.audit.overly-permissive-file-permission.overly-permissive-file-permission",
       "properties": {
        "tags": [
         "external/cwe/cwe-276"
        ],
        "id": "java.lang.security.audit.overly-permissive-file-permission.overly-permissive-file-permission"
       }
      },
      {
       "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
       "name": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
       "properties": {
        "tags": [
         "external/cwe/cwe-22"
        ],
        "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
       }
      },
      {
       "id": "java.lang.security.audit.crypto.weak-random.weak-random",
       "name": "java.lang.security.audit.crypto.weak-random.weak-random",
       "properties": {
        "tags": [
         "external/cwe/cwe-330"
        ],
        "id": "java.lang.security.audit.crypto.weak-random.weak-random"
       }
      },
      {
       "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
       "name": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
       "properties": {
        "tags": [
         "external/cwe/cwe-79"
        ],
        "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
       }
      },
      {
       "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
       "name": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
       "properties": {
        "tags": [
         "external/cwe/cwe-328"
        ],
        "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
       }
      },
      {
       "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
       "name": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
       "properties": {
        "tags": [
         "external/cwe/cwe-328"
        ],
        "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
       }
      },
      {
       "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
       "name": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
       "properties": {
        "tags": [
         "external/cwe/cwe-90"
        ],
        "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
       }
      },
      {
       "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
       "name": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
       "properties": {
        "tags": [
         "external/cwe/cwe-501"
        ],
        "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
       }
      },
      {
       "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
       "name": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
       "properties": {
        "tags": [
         "external/cwe/cwe-643"
        ],
        "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
       }
      },
      {
       "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
       "name": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
       "properties": {
        "tags": [
         "external/cwe/cwe-89"
        ],
        "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
       }
      },
      {
       "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
       "name": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
       "properties": {
        "tags": [
         "external/cwe/cwe-78"
        ],
        "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
       }
      }
     ]
    }
   },
   "results": [
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00002.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00003.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00004.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00054.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00058.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00059.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00060.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00061.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00062.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00063.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00064.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00065.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00066.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00067.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00068.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00069.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00072.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00074.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00075.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00076.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00077.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00078.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00079.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00080.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00081.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00082.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00083.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00084.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00085.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00086.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00087.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00088.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00089.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00090.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00091.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00092.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00093.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00094.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00095.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00096.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00097.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00098.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00099.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00104.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00107.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00109.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00110.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00113.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00116.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00117.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00118.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00942.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00943.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00944.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00948.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00949.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00950.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00951.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00952.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00953.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00954.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00955.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00956.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00957.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00958.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00960.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00962.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00964.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00965.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00966.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00967.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00968.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00969.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00970.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00971.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00972.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00973.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00974.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00975.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00976.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00977.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00978.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00979.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00980.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00981.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00982.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00983.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00984.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00985.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00986.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00987.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00988.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00989.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00990.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00991.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00992.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00993.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00994.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00995.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00996.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01000.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01009.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01010.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01012.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01013.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01014.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01824.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01825.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01826.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01827.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01828.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01833.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01834.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01835.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01836.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01837.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01838.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01841.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01842.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01843.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01847.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01848.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01849.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01850.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01851.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01852.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01853.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01854.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01855.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01856.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01857.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01858.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01859.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01860.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01861.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01862.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01863.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01864.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01865.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01866.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01867.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01868.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01869.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01870.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01871.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01872.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01873.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01874.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01875.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01876.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01879.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01880.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01885.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01886.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01893.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly"
     },
     "message": {
      "text": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00002.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00003.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00004.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00010.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00016.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00023.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00042.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00054.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00058.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00059.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00060.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00061.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00062.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00063.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00064.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00065.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00066.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00066.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00067.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00067.java"
        },
        "region": {
         "startLine": "125"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00068.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00068.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00069.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00072.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00074.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00075.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00076.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00077.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00078.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00078.java"
        },
        "region": {
         "startLine": "110"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00079.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00079.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00080.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00080.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00081.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00081.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00082.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00082.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00083.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00083.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00084.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00084.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00085.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00085.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00086.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00086.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00087.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00087.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00088.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00088.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00089.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00089.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00090.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00091.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00092.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00093.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00094.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00094.java"
        },
        "region": {
         "startLine": "113"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00095.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00095.java"
        },
        "region": {
         "startLine": "110"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00096.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00096.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00097.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00098.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00099.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00104.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00107.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00109.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00110.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00113.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00116.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00117.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00118.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00140.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00160.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00161.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00162.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00163.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00164.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00165.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00166.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00167.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00168.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00169.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00170.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00178.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00179.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00180.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00181.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00182.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00183.java"
        },
        "region": {
         "startLine": "110"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00184.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00185.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00186.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00187.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00188.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00230.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00231.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00232.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00233.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00234.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00235.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00236.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00237.java"
        },
        "region": {
         "startLine": "117"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00238.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00239.java"
        },
        "region": {
         "startLine": "119"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00240.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00241.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00242.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00243.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00244.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00245.java"
        },
        "region": {
         "startLine": "124"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00246.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00247.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00248.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00249.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00296.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00297.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00298.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00299.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00300.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00312.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00313.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00314.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00315.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00316.java"
        },
        "region": {
         "startLine": "115"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00317.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00318.java"
        },
        "region": {
         "startLine": "114"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00319.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00320.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00347.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00348.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00349.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00368.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00369.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00397.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00398.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00399.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00400.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00401.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00402.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00403.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00404.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00405.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00413.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00414.java"
        },
        "region": {
         "startLine": "110"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00415.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00416.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00417.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00418.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00419.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00420.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00421.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00422.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00423.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00461.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00482.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00483.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00484.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00485.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00486.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00487.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00488.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00489.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00490.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00491.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00501.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00502.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00503.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00504.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00505.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00506.java"
        },
        "region": {
         "startLine": "110"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00507.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00560.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00561.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00562.java"
        },
        "region": {
         "startLine": "117"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00563.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00564.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00565.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00566.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00577.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00578.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00579.java"
        },
        "region": {
         "startLine": "110"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00580.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00581.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00582.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00583.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00584.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00585.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00652.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00653.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00654.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00655.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00660.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00661.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00662.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00663.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00664.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00665.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00666.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00667.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00702.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00733.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00734.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00735.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00736.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00744.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00745.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00746.java"
        },
        "region": {
         "startLine": "113"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00747.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00748.java"
        },
        "region": {
         "startLine": "114"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00749.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00750.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00751.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00752.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00753.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00817.java"
        },
        "region": {
         "startLine": "128"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00818.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00819.java"
        },
        "region": {
         "startLine": "113"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00820.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00821.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00828.java"
        },
        "region": {
         "startLine": "118"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00829.java"
        },
        "region": {
         "startLine": "135"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00830.java"
        },
        "region": {
         "startLine": "115"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00831.java"
        },
        "region": {
         "startLine": "130"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00832.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00898.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00899.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00900.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00901.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00902.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00903.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00904.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00911.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00912.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00913.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00914.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00915.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00916.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00917.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00918.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00919.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00920.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00921.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00942.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00943.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00944.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00948.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00949.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00950.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00951.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00952.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00953.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00954.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00955.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00956.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00957.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00958.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00960.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00960.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00962.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00964.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00965.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00966.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00967.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00968.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00969.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00970.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00971.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00971.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00972.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00972.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00973.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00973.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00974.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00974.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00975.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00975.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00976.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00976.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00977.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00977.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00978.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00979.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00980.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00981.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00982.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00983.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00984.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00984.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00985.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00985.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00986.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00986.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00987.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00987.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00988.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00988.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00989.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00989.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00990.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00990.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00991.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00992.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00993.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00994.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00995.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00996.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01000.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01009.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01010.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01012.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01013.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01014.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01058.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01059.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01060.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01061.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01062.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01069.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01070.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01071.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01072.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01073.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01074.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01075.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01076.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01077.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01078.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01079.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01119.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01127.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01128.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01129.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01130.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01131.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01132.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01133.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01134.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01135.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01136.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01137.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01138.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01139.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01140.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01141.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01162.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01163.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01183.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01184.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01185.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01186.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01187.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01195.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01196.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01197.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01198.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01199.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01200.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01201.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01202.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01271.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01272.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01273.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01274.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01275.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01276.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01277.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01278.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01279.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01280.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01281.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01282.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01283.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01291.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01292.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01293.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01294.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01295.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01296.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01297.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01298.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01354.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01355.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01356.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01357.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01358.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01359.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01366.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01367.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01368.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01369.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01370.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01371.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01372.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01373.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01431.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01432.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01433.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01434.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01435.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01436.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01447.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01448.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01449.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01450.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01451.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01452.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01453.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01502.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01518.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01519.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01520.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01521.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01522.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01523.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01524.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01534.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01535.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01536.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01537.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01538.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01539.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01540.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01541.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01542.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01543.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01544.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01545.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01575.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01602.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01603.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01604.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01605.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01611.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01612.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01613.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01614.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01648.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01675.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01676.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01677.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01678.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01679.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01680.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01681.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01682.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01683.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01684.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01694.java"
        },
        "region": {
         "startLine": "116"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01695.java"
        },
        "region": {
         "startLine": "115"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01696.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01697.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01698.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01699.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01700.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01701.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01702.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01703.java"
        },
        "region": {
         "startLine": "110"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01704.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01705.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01706.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01707.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01781.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01782.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01783.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01784.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01785.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01786.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01787.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01788.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01789.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01797.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01798.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01799.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01800.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01801.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01824.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01825.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01826.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01827.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01828.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01833.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01834.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01835.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01836.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01837.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01838.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01841.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01842.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01842.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01843.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01843.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01847.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01848.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01849.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01850.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01851.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01852.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01853.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01853.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01854.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01854.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01855.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01855.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01856.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01856.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01857.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01857.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01858.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01858.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01859.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01859.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01860.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01860.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01861.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01861.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01862.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01862.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01863.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01863.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01864.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01865.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01866.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01866.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01867.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01867.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01868.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01868.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01869.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01869.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01870.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01870.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01871.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01871.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01872.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01873.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01874.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01875.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01876.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
        },
        "region": {
         "startLine": "43"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01879.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01880.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01885.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01886.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01893.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"
        },
        "region": {
         "startLine": "42"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01910.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01930.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01931.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01932.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01933.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01934.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01935.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01945.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01946.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01947.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01948.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01949.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01950.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01951.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01952.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01953.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01954.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01992.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01999.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02000.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02001.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02002.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02003.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02004.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02005.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02006.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02007.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02008.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02009.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02010.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02011.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02012.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02013.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02014.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02038.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02039.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02040.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02060.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02061.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02062.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02063.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02064.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02065.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02066.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02071.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02072.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02073.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02074.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02075.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02076.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02077.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02078.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02079.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02080.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02081.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02082.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02083.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02117.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02138.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02139.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02140.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02141.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02142.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02143.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02144.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02157.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02158.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02159.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02160.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02161.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02162.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02163.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02164.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02209.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02245.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02246.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02247.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02248.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02254.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02255.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02256.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02257.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02258.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02259.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02260.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02337.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02338.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02339.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02345.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02346.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02347.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02348.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02349.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02350.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02351.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02415.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02416.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02417.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02418.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02419.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02420.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02421.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02422.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02423.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02424.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02425.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02426.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02427.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02434.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02435.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02436.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02437.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02438.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02439.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02440.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02441.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02442.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02443.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02444.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02445.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02473.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02497.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02498.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02499.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02500.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02501.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02502.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02503.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02504.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02505.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02506.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02507.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02508.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02519.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02520.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02521.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02522.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02602.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02603.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02604.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02605.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02606.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02607.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02614.java"
        },
        "region": {
         "startLine": "115"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02615.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02616.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02617.java"
        },
        "region": {
         "startLine": "116"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02618.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02619.java"
        },
        "region": {
         "startLine": "110"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02620.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02621.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02700.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02701.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02702.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02703.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02704.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02705.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02706.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02707.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02708.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02709.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02710.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02711.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02715.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02716.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02717.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02718.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02719.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02720.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-samesite.cookie-missing-samesite"
     },
     "message": {
      "text": "Detected cookie without the SameSite attribute."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02721.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00087.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00169.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00170.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00241.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00300.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00348.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00403.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00491.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00565.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00566.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00736.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00820.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00821.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00903.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00977.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01061.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01134.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01185.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01186.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01187.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01280.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01281.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01282.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01283.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01521.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01682.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01683.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01789.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01861.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02005.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02142.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02339.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02427.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02507.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02709.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
     "rule": {
      "id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag"
     },
     "message": {
      "text": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'"
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02710.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.des-is-deprecated.des-is-deprecated"
     },
     "message": {
      "text": "DES is considered deprecated. AES is the recommended cipher. Upgrade to use AES. See https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard for more information."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00019.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00035.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00354.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00355.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00356.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00448.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00449.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00616.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00617.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00859.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01020.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01105.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01106.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01107.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01230.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01325.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01489.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01566.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01641.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01740.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01741.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01742.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01900.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01980.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01981.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02022.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02023.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02375.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated",
     "rule": {
      "id": "java.lang.security.audit.crypto.desede-is-deprecated.desede-is-deprecated"
     },
     "message": {
      "text": "Triple DES (3DES or DESede) is considered deprecated. AES is the recommended cipher. Upgrade to use AES."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02663.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
     "rule": {
      "id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string"
     },
     "message": {
      "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/helpers/DatabaseHelper.java"
        },
        "region": {
         "startLine": "178"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
     "rule": {
      "id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string"
     },
     "message": {
      "text": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/helpers/HibernateUtil.java"
        },
        "region": {
         "startLine": "118"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.ldap-injection.ldap-injection",
     "rule": {
      "id": "java.lang.security.audit.ldap-injection.ldap-injection"
     },
     "message": {
      "text": "Detected non-constant data passed into an LDAP query. If this data can be controlled by an external user, this is an LDAP injection. Ensure data passed to an LDAP query is not controllable; or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/helpers/LDAPManager.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.overly-permissive-file-permission.overly-permissive-file-permission",
     "rule": {
      "id": "java.lang.security.audit.overly-permissive-file-permission.overly-permissive-file-permission"
     },
     "message": {
      "text": "Detected file permissions that are overly permissive (read, write, and execute). It is generally a bad practices to set overly permissive file permission such as read+write+exec for all users. If the file affected is a configuration, a binary, a script or sensitive data, it can lead to privilege escalation or information leakage. Instead, follow the principle of least privilege and give users only the  permissions they need."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/helpers/Utils.java"
        },
        "region": {
         "startLine": "149"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.overly-permissive-file-permission.overly-permissive-file-permission",
     "rule": {
      "id": "java.lang.security.audit.overly-permissive-file-permission.overly-permissive-file-permission"
     },
     "message": {
      "text": "Detected file permissions that are overly permissive (read, write, and execute). It is generally a bad practices to set overly permissive file permission such as read+write+exec for all users. If the file affected is a configuration, a binary, a script or sensitive data, it can lead to privilege escalation or information leakage. Instead, follow the principle of least privilege and give users only the  permissions they need."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/helpers/Utils.java"
        },
        "region": {
         "startLine": "150"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00002.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00002.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00011.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00028.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00028.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00040.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00045.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00045.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00060.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00061.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00063.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00064.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00064.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00131.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00132.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00133.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00135.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00135.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00136.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00136.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00215.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00216.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00218.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00219.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00221.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00221.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00222.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00222.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00262.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00263.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00264.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00359.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00360.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00361.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00362.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00362.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00363.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00363.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00452.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00453.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00454.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00455.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00458.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00458.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00459.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00459.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00526.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00527.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00529.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00622.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00623.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00624.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00624.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00625.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00625.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00627.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00627.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00696.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00697.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00698.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00699.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00700.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00700.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00784.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00787.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00787.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00788.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00788.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00862.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00863.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00866.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00866.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00949.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00950.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00951.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00952.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00953.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00953.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00954.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00954.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00955.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00955.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00956.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00956.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01025.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01026.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01027.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01028.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01029.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01030.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01031.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01032.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01032.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01033.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01033.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01034.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01034.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01035.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01035.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01109.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01110.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01111.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01112.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01113.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01113.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01114.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01114.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01115.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01115.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01116.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01116.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01117.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01117.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01155.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01156.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01157.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01158.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01159.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01160.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01160.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01161.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01161.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01231.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01232.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01233.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01234.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01235.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01236.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01237.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01238.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01238.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01239.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01239.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01240.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01240.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01328.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01329.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01330.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01330.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01331.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01331.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01403.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01404.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01405.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01406.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01407.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01407.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01408.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01408.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01493.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01494.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01495.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01496.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01497.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01497.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01498.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01498.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01499.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01499.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01570.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01571.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01572.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01573.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01574.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01574.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01642.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01643.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01644.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01645.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01646.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01646.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01647.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01647.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01744.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01745.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01746.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01747.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01748.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01749.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01750.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01751.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01751.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01752.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01752.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01833.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01834.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01835.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01836.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01837.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01838.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01841.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01841.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01904.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01905.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01906.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01906.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01907.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01907.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01983.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01984.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01985.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01986.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01987.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01988.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01989.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01989.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01990.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01990.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02026.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02027.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02028.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02029.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02030.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02031.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02032.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02033.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02033.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02034.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02034.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02105.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02106.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02107.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02108.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02108.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02109.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02109.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02110.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02110.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02111.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02111.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02112.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02112.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02197.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02198.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02199.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02200.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02201.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02202.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02202.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02203.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02203.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02204.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02204.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02205.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02205.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02300.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02301.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02302.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02303.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02304.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02377.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02378.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02379.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02380.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02380.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02381.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02381.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02382.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02382.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02383.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02383.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02462.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02463.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02464.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02465.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02466.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02467.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02468.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02468.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02469.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02469.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02470.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02470.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02554.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02555.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02556.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02557.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02558.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02559.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02560.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02561.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02562.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02563.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02563.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02564.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02564.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02565.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02565.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02566.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02566.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02567.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02567.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02568.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02568.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02569.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02569.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02664.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02665.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02666.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02667.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02668.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02668.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02669.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
     "rule": {
      "id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal"
     },
     "message": {
      "text": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02669.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00023.java"
        },
        "region": {
         "startLine": "47"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00066.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00067.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00068.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00078.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00079.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00080.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00081.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00082.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00083.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00084.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00085.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00086.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00140.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00160.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00161.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00162.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00163.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00164.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00165.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00166.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00167.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00168.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00230.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00231.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00232.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00233.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00234.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00235.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00236.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00237.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00238.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00239.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00240.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00296.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00297.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00298.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00299.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00347.java"
        },
        "region": {
         "startLine": "47"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00368.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00369.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00397.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00398.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00399.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00400.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00401.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00402.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00461.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00482.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00483.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00484.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00485.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00486.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00487.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00488.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00489.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00490.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00560.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00561.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00562.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00563.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00564.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00652.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00653.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00654.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00702.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00733.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00734.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00735.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00817.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00818.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00819.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00898.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00899.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00900.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00901.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00902.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00960.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00971.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00972.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00973.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00974.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00975.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00976.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01058.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01059.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01060.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01119.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01127.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01128.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01129.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01130.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01131.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01132.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01133.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01162.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01163.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01183.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01184.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01271.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01272.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01273.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01274.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01275.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01276.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01277.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01278.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01279.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01354.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01355.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01356.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01357.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01358.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01431.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01432.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01433.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01434.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01435.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01502.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01518.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01519.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01520.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01575.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01602.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01603.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01648.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01675.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01676.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01677.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01678.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01679.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01680.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01681.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01781.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01782.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01783.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01784.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01785.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01786.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01787.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01788.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01842.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01843.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01853.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01854.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01855.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01856.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01857.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01858.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01859.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01860.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01910.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01930.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01931.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01932.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01933.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01934.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01992.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01999.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02000.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02001.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02002.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02003.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02004.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02038.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02039.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02040.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02060.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02061.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02062.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02063.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02117.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02138.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02139.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02140.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02141.java"
        },
        "region": {
         "startLine": "48"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02209.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02245.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02246.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02337.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02338.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02415.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02416.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02417.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02418.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02419.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02420.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02421.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02422.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02423.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02424.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02425.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02426.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02473.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02497.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02498.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02499.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02500.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02501.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02502.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02503.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02504.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02505.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02506.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02602.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02603.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02604.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02605.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02606.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02700.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02701.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02702.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02703.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02704.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02705.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02706.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02707.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.weak-random.weak-random",
     "rule": {
      "id": "java.lang.security.audit.crypto.weak-random.weak-random"
     },
     "message": {
      "text": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02708.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00002.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00003.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00004.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00009.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00011.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00012.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00012.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00013.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00014.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00016.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00019.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00021.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00021.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00022.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00026.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00026.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00028.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00029.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00030.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00031.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00032.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00033.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00033.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00035.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00036.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00036.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00038.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00038.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00040.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00041.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00041.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00044.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00044.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00045.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00046.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00047.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00048.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00049.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java"
        },
        "region": {
         "startLine": "123"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00054.java"
        },
        "region": {
         "startLine": "120"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java"
        },
        "region": {
         "startLine": "116"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java"
        },
        "region": {
         "startLine": "121"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00058.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00059.java"
        },
        "region": {
         "startLine": "119"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00060.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00061.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00063.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00064.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00065.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00065.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00069.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00072.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java"
        },
        "region": {
         "startLine": "118"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00075.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00076.java"
        },
        "region": {
         "startLine": "122"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00087.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00088.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00089.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00097.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00098.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00104.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00117.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00117.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00118.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00118.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00122.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00128.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00129.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00130.java"
        },
        "region": {
         "startLine": "123"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00131.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00132.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00133.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00133.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00135.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00136.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00138.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00138.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00142.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00143.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00146.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00148.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00149.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00150.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00152.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00154.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00155.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00157.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00169.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00170.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00194.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00195.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00196.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00207.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00207.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java"
        },
        "region": {
         "startLine": "117"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00209.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java"
        },
        "region": {
         "startLine": "115"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00212.java"
        },
        "region": {
         "startLine": "110"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00214.java"
        },
        "region": {
         "startLine": "114"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00215.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00216.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00218.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00219.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00221.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00222.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00224.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00225.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00229.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00241.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00242.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00250.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00251.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00253.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java"
        },
        "region": {
         "startLine": "113"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00255.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00259.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00260.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00262.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00263.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00264.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00268.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00269.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00272.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00274.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00276.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00278.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00280.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00281.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00282.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00283.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00284.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00285.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00286.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00287.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00287.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00289.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00290.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00291.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00292.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00292.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00300.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00321.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00323.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00324.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00325.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00326.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00327.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00338.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00338.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00340.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00341.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00345.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00348.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00351.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00354.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00356.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00357.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00358.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00359.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00360.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00361.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00361.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00362.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00363.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00366.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00366.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00370.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00371.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00372.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00373.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00374.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00375.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00376.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00378.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00380.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00381.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00384.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00387.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00388.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00389.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00390.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00391.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00392.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00392.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00393.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00395.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00395.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00403.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00404.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00405.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00424.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00425.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00426.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00431.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00431.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00434.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00442.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00442.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00443.java"
        },
        "region": {
         "startLine": "110"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00444.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00447.java"
        },
        "region": {
         "startLine": "113"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00448.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00449.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00451.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00452.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00453.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00454.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00455.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00455.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00458.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00459.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00463.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00464.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00465.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00469.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00471.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00472.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00473.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00474.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00475.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00476.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00477.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00478.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00479.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00479.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00491.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00492.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00508.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00520.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00520.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java"
        },
        "region": {
         "startLine": "118"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java"
        },
        "region": {
         "startLine": "116"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00526.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00527.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00529.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00529.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00530.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00530.java"
        },
        "region": {
         "startLine": "120"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00534.java"
        },
        "region": {
         "startLine": "113"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00535.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00537.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00539.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00540.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00541.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00542.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00547.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00549.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00551.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00553.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00554.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00555.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00556.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00557.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00557.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00565.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00566.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00588.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00598.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00598.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00600.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00607.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00607.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00612.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00616.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00617.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00618.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00622.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00623.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00624.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00625.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00627.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00629.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00629.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00630.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00630.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00632.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00633.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00635.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00636.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00637.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00638.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00639.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00640.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00641.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00643.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00644.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00645.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00647.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00648.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00649.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00651.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00651.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00655.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00656.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00668.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00669.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00670.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00671.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00677.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00677.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00678.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00678.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00679.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00679.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00683.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00683.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00686.java"
        },
        "region": {
         "startLine": "110"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00687.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00690.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00694.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00694.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00696.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00697.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00698.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00699.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00700.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00706.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00707.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00708.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00709.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00710.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00712.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00713.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00714.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00715.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00716.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00718.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00719.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00720.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00723.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00724.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00726.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00727.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00728.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00729.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00736.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00755.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00756.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00757.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00759.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00776.java"
        },
        "region": {
         "startLine": "132"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00778.java"
        },
        "region": {
         "startLine": "130"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java"
        },
        "region": {
         "startLine": "121"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00780.java"
        },
        "region": {
         "startLine": "126"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java"
        },
        "region": {
         "startLine": "121"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00782.java"
        },
        "region": {
         "startLine": "133"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00784.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00784.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00787.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00788.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00789.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00790.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00791.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00793.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00794.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00795.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00797.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00798.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00800.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00801.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00802.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00803.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00804.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00807.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00809.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00810.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00811.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00812.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00813.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00813.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00820.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00821.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00822.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00833.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00834.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00836.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00840.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00841.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00846.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00854.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java"
        },
        "region": {
         "startLine": "117"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00858.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00861.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00861.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00862.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00863.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00866.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00870.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00872.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00874.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00876.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00878.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00880.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00881.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00882.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00885.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00888.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00889.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00891.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00891.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00892.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00892.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00893.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00893.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00894.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00894.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00903.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00904.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00922.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00923.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00930.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00932.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00932.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00933.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00933.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00934.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00934.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00935.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00935.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00936.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00941.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00941.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00942.java"
        },
        "region": {
         "startLine": "120"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00943.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00944.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00948.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00948.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00949.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00950.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00951.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00952.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00953.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00954.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00955.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00956.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00957.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00957.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00958.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00958.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00962.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00964.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00965.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00966.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00967.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00977.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00991.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00992.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00993.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00994.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00995.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01009.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01009.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01010.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01013.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01013.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01014.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01014.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01019.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01020.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01021.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01022.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01023.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01023.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01024.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01024.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01025.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01026.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01027.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01028.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01029.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01030.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01031.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01031.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01032.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01033.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01034.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01035.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01036.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01036.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01037.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01038.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01039.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01040.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01041.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01042.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01043.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01044.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01045.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01046.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01047.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01048.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01049.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01050.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01051.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01052.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01053.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01054.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01055.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01056.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01056.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01057.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01061.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01062.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01063.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01080.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01081.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01082.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01085.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01086.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01089.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01089.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java"
        },
        "region": {
         "startLine": "114"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01100.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01101.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01104.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01105.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01106.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01107.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01108.java"
        },
        "region": {
         "startLine": "114"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01109.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01110.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01111.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01111.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01112.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01112.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01113.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01114.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01115.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01116.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01117.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01118.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01118.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01120.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01121.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01122.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01123.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01124.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01125.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01126.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01134.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01142.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01143.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01144.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01145.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01146.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01147.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01151.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01152.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01153.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01154.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01154.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01155.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01156.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01157.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01158.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01158.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01159.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01159.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01160.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01161.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01164.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01165.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01166.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01167.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01168.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01169.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01170.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01171.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01172.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01173.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01174.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01175.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01176.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01177.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01178.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01179.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01180.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01181.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01185.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01186.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01187.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01188.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01203.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01204.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01205.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01206.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01207.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01214.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01223.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01223.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01224.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01224.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01225.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01225.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01226.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01227.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01230.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01231.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01232.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01233.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01234.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01235.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01236.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01237.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01238.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01239.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01240.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01241.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01241.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01242.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01242.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01243.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01243.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01245.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01246.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01247.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01248.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01249.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01250.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01251.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01252.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01253.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01254.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01255.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01256.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01257.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01258.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01259.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01260.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01261.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01262.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01263.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01264.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01265.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01265.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01266.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01266.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01267.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01268.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01268.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01280.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01281.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01282.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01283.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01284.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01299.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01300.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01309.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01309.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01316.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01316.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01319.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01321.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01324.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01325.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01326.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01326.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01327.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01327.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01328.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01329.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01330.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01331.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01332.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01333.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01334.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01335.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01336.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01337.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01338.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01339.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01340.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01341.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01342.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01343.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01344.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01345.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01346.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01347.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01348.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01349.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01350.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01350.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01351.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01351.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01352.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01359.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01374.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01375.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01376.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01377.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01386.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01386.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01397.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01397.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01399.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01400.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01401.java"
        },
        "region": {
         "startLine": "113"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01402.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01402.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01403.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01404.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01405.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01406.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01406.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01407.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01408.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01409.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01409.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01410.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01411.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01412.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01413.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01414.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01415.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01416.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01417.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01418.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01419.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01420.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01421.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01422.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01423.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01424.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01425.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01426.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01427.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01428.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01429.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01436.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01437.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01438.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01439.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01454.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01455.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01456.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01457.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01458.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01467.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01467.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01469.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01469.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01471.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01478.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01478.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01479.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01479.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01481.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01482.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01485.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01487.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01488.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01489.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01490.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01490.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01491.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01491.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01492.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01492.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01493.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01494.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01495.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01496.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01496.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01497.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01498.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01499.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01500.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01500.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01501.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01501.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01504.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01505.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01506.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01507.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01508.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01509.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01510.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01511.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01512.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01513.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01514.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01515.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01521.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01522.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01523.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01524.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01525.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01546.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01547.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01548.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01549.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01550.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01551.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01553.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01555.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01555.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01556.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01556.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01561.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01561.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01562.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01562.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01563.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01564.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01566.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01567.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01568.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01568.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01569.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01569.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01570.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01571.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01572.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01573.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01574.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01576.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01577.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01578.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01579.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01580.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01581.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01582.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01583.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01584.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01585.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01586.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01587.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01588.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01589.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01590.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01591.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01592.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01593.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01594.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01595.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01596.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01596.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01597.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01597.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01598.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01599.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01604.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01605.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01615.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01616.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01617.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01618.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01619.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01624.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01632.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01632.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01633.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01633.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java"
        },
        "region": {
         "startLine": "123"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01635.java"
        },
        "region": {
         "startLine": "125"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01636.java"
        },
        "region": {
         "startLine": "125"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java"
        },
        "region": {
         "startLine": "121"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java"
        },
        "region": {
         "startLine": "121"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java"
        },
        "region": {
         "startLine": "121"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01640.java"
        },
        "region": {
         "startLine": "114"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01641.java"
        },
        "region": {
         "startLine": "113"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01642.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01643.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01644.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01645.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01645.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01646.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01647.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01649.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01650.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01651.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01652.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01653.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01654.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01655.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01656.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01657.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01658.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01659.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01660.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01661.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01662.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01663.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01664.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01665.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01666.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01667.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01668.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01669.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01670.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01671.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01682.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01683.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01684.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01708.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01709.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01710.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01711.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01722.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01722.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01727.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01734.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01734.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01735.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01735.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01736.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01736.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01737.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01738.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01739.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01740.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01741.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01742.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01743.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01743.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01744.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01745.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01746.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01747.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01748.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01749.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01750.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01750.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01751.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01752.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01753.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01753.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01754.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01754.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01755.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01755.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01756.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01756.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01758.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01759.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01760.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01761.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01762.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01763.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01764.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01765.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01766.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01767.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01768.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01769.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01770.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01771.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01772.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01773.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01773.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01774.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01775.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01776.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01776.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01777.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01777.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01789.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01790.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01802.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01806.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01807.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01808.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01808.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01809.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01809.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01810.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01810.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01811.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01811.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01812.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01812.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01813.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01813.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01814.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01814.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01821.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01821.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java"
        },
        "region": {
         "startLine": "118"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java"
        },
        "region": {
         "startLine": "118"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01824.java"
        },
        "region": {
         "startLine": "120"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01825.java"
        },
        "region": {
         "startLine": "120"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01826.java"
        },
        "region": {
         "startLine": "120"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01827.java"
        },
        "region": {
         "startLine": "120"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01828.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01833.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01834.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01835.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01836.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01837.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01838.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01841.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01847.java"
        },
        "region": {
         "startLine": "107"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01848.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01849.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01861.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01862.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01863.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01872.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01873.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01874.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01875.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01876.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01884.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01893.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01893.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01896.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01899.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01900.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01901.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01902.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01902.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01903.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01903.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01904.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01905.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01905.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01906.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01907.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01908.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01908.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01909.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01909.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01912.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01913.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01914.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01915.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01916.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01917.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01918.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01919.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01920.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01921.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01922.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01923.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01924.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01925.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01926.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01927.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01935.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01955.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01956.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01957.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01958.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01959.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01960.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01963.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01966.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01966.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01967.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01967.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01968.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01974.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01974.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01975.java"
        },
        "region": {
         "startLine": "116"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01976.java"
        },
        "region": {
         "startLine": "116"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01977.java"
        },
        "region": {
         "startLine": "116"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java"
        },
        "region": {
         "startLine": "112"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01979.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01980.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01981.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01982.java"
        },
        "region": {
         "startLine": "114"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01983.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01984.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01985.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01986.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01987.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01988.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01989.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01990.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01991.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01991.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01993.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01994.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01995.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01996.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01997.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01998.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02005.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02006.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02015.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02016.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02021.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02022.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02023.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02024.java"
        },
        "region": {
         "startLine": "106"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02025.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02025.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02026.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02027.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02028.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02029.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02030.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02031.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02032.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02032.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02033.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02034.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02035.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02035.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02036.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02036.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02037.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02037.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02041.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02042.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02043.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02044.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02045.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02046.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02047.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02048.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02049.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02050.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02051.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02052.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02053.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02054.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02055.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02056.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02057.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02057.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02064.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02065.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02066.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02084.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02085.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02086.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02100.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02100.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02102.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02103.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02104.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02104.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02105.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02106.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02107.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02108.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02109.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02110.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02111.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02112.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02113.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02113.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02114.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02114.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02115.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02115.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02116.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02116.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02119.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02120.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02121.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02122.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02123.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02124.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02125.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02126.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02127.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02128.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02129.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02130.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02131.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02132.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02133.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02134.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02135.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02136.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02136.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02142.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02143.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02144.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02145.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02165.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02166.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02167.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02168.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02174.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02175.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02176.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02177.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02177.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02180.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02180.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02182.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02182.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02183.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02183.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02184.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02184.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02189.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02189.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02190.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02191.java"
        },
        "region": {
         "startLine": "105"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02196.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02196.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02197.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02198.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02199.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02200.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02201.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02202.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02203.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02204.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02205.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02206.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02206.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02207.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02207.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02208.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02208.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02210.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02211.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02212.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02213.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02214.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02215.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02216.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02217.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02218.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02219.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02220.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02221.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02222.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02223.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02224.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02225.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02226.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02227.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02228.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02229.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02230.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02231.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02232.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02233.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02234.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02235.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02236.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02237.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02238.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02239.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02240.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02241.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02247.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02248.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02261.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02262.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02263.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02272.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02273.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02274.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02274.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02277.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02277.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02278.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02278.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02282.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02289.java"
        },
        "region": {
         "startLine": "115"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02296.java"
        },
        "region": {
         "startLine": "113"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02297.java"
        },
        "region": {
         "startLine": "113"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02298.java"
        },
        "region": {
         "startLine": "113"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02299.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02299.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02300.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02301.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02302.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02303.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02304.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02304.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02305.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02305.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02306.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02306.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02308.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02309.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02310.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02311.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02312.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02313.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02314.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02315.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02316.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02317.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02318.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02319.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02320.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02321.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02322.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02323.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02324.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02325.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02326.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02327.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02327.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02328.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02328.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02329.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02329.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02330.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02330.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02331.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02332.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02339.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02352.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02361.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02361.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02363.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02370.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02370.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02371.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02372.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java"
        },
        "region": {
         "startLine": "99"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02375.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02376.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02376.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02377.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02378.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02379.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02380.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02381.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02382.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02383.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02384.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02384.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02386.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02387.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02388.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02389.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02390.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02391.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02392.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02393.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02394.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02395.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02396.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02397.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02398.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02399.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02400.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02401.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02402.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02403.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02404.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02405.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02406.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02407.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02408.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02409.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02409.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02410.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02410.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02427.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02446.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02447.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02448.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02451.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02452.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02452.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02453.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02453.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02457.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02457.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java"
        },
        "region": {
         "startLine": "101"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02459.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02460.java"
        },
        "region": {
         "startLine": "103"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02461.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02462.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02463.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02464.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02465.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02466.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02467.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02467.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02468.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02469.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02470.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02471.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02471.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02472.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02472.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02474.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02475.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02476.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02477.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02478.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02479.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02480.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02481.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02482.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02483.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02484.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02485.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02486.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02487.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02488.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02489.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02490.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02491.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02492.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02493.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02493.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02494.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02495.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02495.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02507.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02508.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02509.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02523.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02524.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02525.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02526.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02527.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02536.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02537.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02538.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02538.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02539.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02539.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02540.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02547.java"
        },
        "region": {
         "startLine": "125"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java"
        },
        "region": {
         "startLine": "121"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java"
        },
        "region": {
         "startLine": "121"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java"
        },
        "region": {
         "startLine": "121"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02551.java"
        },
        "region": {
         "startLine": "114"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02552.java"
        },
        "region": {
         "startLine": "123"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02553.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02553.java"
        },
        "region": {
         "startLine": "109"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02554.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02555.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02556.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02557.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02558.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02559.java"
        },
        "region": {
         "startLine": "92"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02560.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02561.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02561.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02562.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02562.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02563.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02564.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02565.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02566.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02567.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02568.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02569.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02570.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02570.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02571.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02571.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02572.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02572.java"
        },
        "region": {
         "startLine": "111"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02573.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02574.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02575.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02576.java"
        },
        "region": {
         "startLine": "104"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02577.java"
        },
        "region": {
         "startLine": "108"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02578.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02579.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02580.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02581.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02582.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02583.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02584.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02585.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02586.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02587.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02588.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02589.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02590.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02591.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02592.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02593.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02594.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02595.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02596.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02597.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02598.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02599.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02600.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02600.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02601.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02601.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02607.java"
        },
        "region": {
         "startLine": "97"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02608.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02609.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02622.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02623.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02624.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02638.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02639.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02640.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"
        },
        "region": {
         "startLine": "93"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02646.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java"
        },
        "region": {
         "startLine": "100"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02659.java"
        },
        "region": {
         "startLine": "102"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java"
        },
        "region": {
         "startLine": "98"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02662.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02663.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02664.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02665.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02666.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02666.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02667.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02667.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02668.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02669.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02672.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02673.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02674.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02675.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02676.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02677.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02678.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02679.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02680.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02681.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02682.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02683.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02684.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02685.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02686.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02687.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02688.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02689.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02690.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02691.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02692.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02693.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02694.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02695.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02696.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02709.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02710.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02711.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02712.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02722.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02723.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02724.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02725.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02726.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02731.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02732.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02732.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02733.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02733.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02734.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02734.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02735.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02735.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02736.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02736.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02737.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer",
     "rule": {
      "id": "java.lang.security.audit.xss.no-direct-response-writer.no-direct-response-writer"
     },
     "message": {
      "text": "Detected a request with potential user-input going into a OutputStream or Writer object.  This bypasses any view or template environments, including HTML escaping, which may expose this application to cross-site scripting (XSS) vulnerabilities. Consider using a view technology such as JavaServer Faces (JSFs) which automatically escapes HTML views."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02737.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00268.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00269.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00371.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00464.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00532.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00533.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00534.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00634.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00635.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00636.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00705.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00789.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00790.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00870.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00871.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00872.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01123.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01165.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01166.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01246.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01411.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01649.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01650.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01651.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01761.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02042.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02211.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02212.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02213.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02308.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02386.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02474.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02573.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02574.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-sha1.use-of-sha1"
     },
     "message": {
      "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Instead, use PBKDF2 for password hashing or SHA256 or SHA512 for other hash function applications."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00046.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00272.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00372.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00465.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00536.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00537.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00637.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00708.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00794.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01038.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01167.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01247.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01333.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01334.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01504.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01577.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01653.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02217.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02311.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02387.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02388.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02475.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02476.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02575.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02674.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
     "rule": {
      "id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5"
     },
     "message": {
      "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02675.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00012.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00021.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00044.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00138.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00530.java"
        },
        "region": {
         "startLine": "94"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00630.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00694.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00861.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00948.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01023.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01024.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01154.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01241.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01242.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01243.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01326.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01327.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01402.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01490.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01491.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01492.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01501.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01568.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01569.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01743.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01753.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01754.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01755.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01756.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01902.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01903.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01909.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02025.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02036.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02037.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02104.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02114.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02115.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02116.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02196.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02208.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02299.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02305.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02306.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02376.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02384.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02472.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02553.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02571.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-ldapi-from-http-request.tainted-ldapi-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into an LDAP query. This could lead to LDAP injection if the input is not properly sanitized, which could result in attackers modifying objects in the LDAP tree structure. Ensure data passed to an LDAP query is not controllable or properly sanitize the data."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02572.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00004.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00031.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00097.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00098.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00250.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00251.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00253.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00321.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00323.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00324.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00325.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00326.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00327.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00424.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00425.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00426.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00508.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00588.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00755.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00756.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00757.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00759.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00833.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00834.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00836.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00991.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00992.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00993.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00994.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00995.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01080.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01081.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01082.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01142.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01143.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01144.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01145.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01146.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01203.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01204.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01205.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01206.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01207.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01299.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01300.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01374.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01375.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01376.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01377.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01454.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01455.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01456.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01457.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01458.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01615.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01616.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01617.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01618.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01619.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01708.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01709.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01710.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01711.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01872.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01873.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01874.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01875.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01876.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01955.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01956.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01957.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01958.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01959.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01960.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02015.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02016.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02084.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02085.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02086.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02165.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02166.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02167.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02168.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02261.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02262.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02263.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02352.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02523.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02524.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02525.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02526.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02527.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02622.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02623.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters,  blurring the line between what's trusted and untrusted,  and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02624.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00117.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00118.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00207.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00442.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00520.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00607.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01013.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01014.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01223.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01224.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01225.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01316.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01397.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01478.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01479.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01632.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01633.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01734.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01735.java"
        },
        "region": {
         "startLine": "89"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01736.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01893.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01974.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02100.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02189.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-xpath-from-http-request.tainted-xpath-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a XPath evaluate or compile command.  This could lead to xpath injection if variables passed into the evaluate or compile commands are not properly sanitized. Xpath injection could lead to unauthorized access to sensitive information in XML documents. Instead, thoroughly sanitize user input or use parameterized xpath queries if you can."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02370.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00008.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00018.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00024.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00024.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00026.java"
        },
        "region": {
         "startLine": "49"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00027.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00032.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00033.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00034.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00037.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00037.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00038.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00105.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"
        },
        "region": {
         "startLine": "91"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00109.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00114.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00191.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00192.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00192.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00193.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00193.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00195.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00196.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00203.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00204.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00328.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00329.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00333.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00333.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00336.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00338.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00343.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00344.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00344.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00429.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00429.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00430.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00430.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00431.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00436.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00437.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00438.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00439.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00439.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00441.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00510.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00512.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00514.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00516.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00517.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00518.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00590.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"
        },
        "region": {
         "startLine": "86"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00598.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00601.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00603.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00604.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00604.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00605.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00606.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00761.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00762.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00763.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00763.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00766.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00772.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00774.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00838.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00838.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00851.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00996.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00999.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01000.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01001.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01009.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01012.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01085.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01086.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01089.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01091.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01092.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01093.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01094.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01095.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01096.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01097.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01098.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01212.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01212.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01213.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01213.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01215.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01216.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01217.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01218.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01219.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01219.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01220.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01221.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01301.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01302.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01303.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01303.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01304.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01304.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01305.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01305.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01306.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01306.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01307.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01307.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01309.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01310.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01311.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01312.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01313.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01314.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01315.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01378.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01380.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01385.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01385.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01386.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01387.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01389.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01392.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01393.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01459.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01461.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01467.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01468.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01469.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01472.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01474.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01620.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01621.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01622.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01623.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01627.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01628.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01629.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01630.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01631.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01713.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01714.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01717.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01717.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01719.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01719.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01722.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01729.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01732.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01877.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01878.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01879.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01879.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01880.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01880.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01885.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01886.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01961.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01961.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01962.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01962.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01965.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01966.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01967.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01969.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01971.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01972.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01973.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02089.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02089.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02093.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02095.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02096.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02097.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02097.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02098.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02099.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02169.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02170.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02171.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02171.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02172.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02172.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02173.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02173.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02175.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02176.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02177.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02180.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02182.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02183.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02184.java"
        },
        "region": {
         "startLine": "50"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02185.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02186.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02187.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02188.java"
        },
        "region": {
         "startLine": "51"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02188.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02265.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02266.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02267.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02267.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02268.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02268.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02271.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02271.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02274.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02276.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02277.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02278.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02279.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02280.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02283.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02285.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02286.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02353.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02353.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"
        },
        "region": {
         "startLine": "66"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02361.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02365.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02366.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02367.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02368.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02528.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02529.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02530.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02532.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02532.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02535.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02535.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02538.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02539.java"
        },
        "region": {
         "startLine": "52"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02541.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02542.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02543.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02544.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02545.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02546.java"
        },
        "region": {
         "startLine": "53"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02626.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02627.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02629.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02631.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02631.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02633.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02633.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02634.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02634.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02636.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02636.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02637.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02637.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02639.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02640.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02647.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02648.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02652.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.sqli.tainted-sql-from-http-request.tainted-sql-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a SQL sink or statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use parameterized SQL queries or properly sanitize user input instead."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02657.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00006.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00007.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00015.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00017.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00051.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00051.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00077.java"
        },
        "region": {
         "startLine": "96"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00090.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00091.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00092.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00158.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00159.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00159.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00174.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00176.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00177.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00293.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00294.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00295.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00295.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00302.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00303.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00306.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00308.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00310.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00311.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00406.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00408.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00409.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00480.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00481.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00496.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00497.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00498.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00499.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00500.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00567.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00568.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00571.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00572.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00573.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00574.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00576.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00658.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00659.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00731.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00738.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00739.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00743.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00814.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00825.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00826.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00896.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00897.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00897.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00905.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00906.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00907.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00908.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00909.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00910.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00968.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00969.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00970.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00978.java"
        },
        "region": {
         "startLine": "88"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00979.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00980.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00981.java"
        },
        "region": {
         "startLine": "90"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00982.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest00983.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01064.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01065.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01066.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01067.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01068.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01182.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01189.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01190.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01191.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01192.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01193.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01194.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01270.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01270.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01285.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01286.java"
        },
        "region": {
         "startLine": "69"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01287.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01288.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01289.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01290.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01353.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01360.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01361.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01362.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01363.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01364.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01365.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01430.java"
        },
        "region": {
         "startLine": "74"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01430.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01440.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01441.java"
        },
        "region": {
         "startLine": "83"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01442.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01443.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01444.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01445.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01446.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01517.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01517.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01526.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01527.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01528.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01529.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01530.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01531.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01532.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01533.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01600.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01601.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01606.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01607.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01608.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01609.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01610.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01673.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01674.java"
        },
        "region": {
         "startLine": "84"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01674.java"
        },
        "region": {
         "startLine": "87"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01685.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01686.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01687.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01688.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01689.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01690.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01691.java"
        },
        "region": {
         "startLine": "80"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01692.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01693.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01780.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01780.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01791.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01792.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01793.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01794.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01795.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01796.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01850.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01851.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01852.java"
        },
        "region": {
         "startLine": "79"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01852.java"
        },
        "region": {
         "startLine": "82"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01864.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01865.java"
        },
        "region": {
         "startLine": "77"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01928.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01929.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01929.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01936.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01937.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01938.java"
        },
        "region": {
         "startLine": "76"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01939.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01940.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01941.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01942.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01943.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest01944.java"
        },
        "region": {
         "startLine": "63"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02058.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02059.java"
        },
        "region": {
         "startLine": "67"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02059.java"
        },
        "region": {
         "startLine": "70"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02067.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02068.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02069.java"
        },
        "region": {
         "startLine": "65"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02070.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02137.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02146.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02147.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02148.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02149.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02150.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02151.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02152.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02153.java"
        },
        "region": {
         "startLine": "57"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02154.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02155.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02156.java"
        },
        "region": {
         "startLine": "54"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02242.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02243.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02244.java"
        },
        "region": {
         "startLine": "62"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02249.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02250.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02251.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02252.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02253.java"
        },
        "region": {
         "startLine": "75"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02333.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02334.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02340.java"
        },
        "region": {
         "startLine": "85"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02341.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02342.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02343.java"
        },
        "region": {
         "startLine": "72"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02344.java"
        },
        "region": {
         "startLine": "68"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02414.java"
        },
        "region": {
         "startLine": "60"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02428.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02429.java"
        },
        "region": {
         "startLine": "71"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02430.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02431.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02432.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02433.java"
        },
        "region": {
         "startLine": "73"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02510.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02511.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02512.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02513.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02514.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02515.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02516.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02517.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02518.java"
        },
        "region": {
         "startLine": "56"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02610.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02611.java"
        },
        "region": {
         "startLine": "95"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02612.java"
        },
        "region": {
         "startLine": "81"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02613.java"
        },
        "region": {
         "startLine": "78"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02697.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02698.java"
        },
        "region": {
         "startLine": "59"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02699.java"
        },
        "region": {
         "startLine": "61"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02699.java"
        },
        "region": {
         "startLine": "64"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02713.java"
        },
        "region": {
         "startLine": "58"
        }
       }
      }
     ]
    },
    {
     "ruleId": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request",
     "rule": {
      "id": "java.lang.security.audit.tainted-cmd-from-http-request.tainted-cmd-from-http-request"
     },
     "message": {
      "text": "Detected input from a HTTPServletRequest going into a 'ProcessBuilder' or 'exec' command.  This could lead to command injection if variables passed into the exec commands are not properly sanitized.  Instead, avoid using these OS commands with user-supplied input, or, if you must use these commands, use a whitelist of specific values."
     },
     "locations": [
      {
       "physicalLocation": {
        "artifactLocation": {
         "uri": "main/java/org/owasp/benchmark/testcode/BenchmarkTest02714.java"
        },
        "region": {
         "startLine": "55"
        }
       }
      }
     ]
    }
   ]
  }
 ]
}